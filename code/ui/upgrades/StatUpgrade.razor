@using Sandbox;
@using Sandbox.UI;
@using System;
@using System.Collections.Generic;

@namespace DeadLines
@inherits Panel
@attribute [StyleSheet]

<root>
    <div class="upgradeText">
        <label>@(Title):</label>
        <label>@(ValueText)</label>
    </div>
    <button Text="+" onclick=@AddUpgrade></button>
</root>

@code
{
    // A Pawn or a PowerupComponent
    public object UpgradeableEnt { get; set; }
    public StatDescription StatDescription { get; set; }
    public string StatPropName { get; set; }

    public string Title {
        get
        {
            if (StatDescription != null)
            {
                return StatDescription.Name;
            }
            else if (StatPropName.StartsWith("Powerup-"))
            {
                var type = TypeLibrary.GetType(StatPropName.Substring("Powerup-".Length));
                var displayInfo = DisplayInfo.ForType(type.TargetType);
                var result = displayInfo.Name;
                if (result.EndsWith(" Component"))
                    result = result.Substring(0, result.Length - " Component".Length);
                return result;
            }
            else
                return "Name not found";
        }
    }

    public string ValueText {
        get
        {
            if (StatDescription == null)
                return "-";

            var result = "";
            IDictionary<string, int> upgrades = null;
            if (UpgradeableEnt is Pawn pawn)
                upgrades = pawn.Upgrades;
            if (UpgradeableEnt is PowerupComponent comp)
                upgrades = comp.Upgrades;

            if (upgrades == null)
                result = "0";
            else
            {
                upgrades.TryGetValue(StatPropName, out var statUpgradePoints);
                result = statUpgradePoints.ToString();
            }

            if (StatDescription != null)
                result += $" / {StatDescription.MaxPoints}";

            return result;
        }
    }

    public void AddUpgrade()
    {
        if (UpgradeableEnt is Pawn pawn)
            Pawn.AddPawnUpgradeCmd(StatPropName);
        if (UpgradeableEnt is PowerupComponent comp)
            PowerupComponent.AddPowerupUpgradeCmd( comp.GetType().ToString(), StatPropName);
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(StatPropName, ValueText);
    }
}